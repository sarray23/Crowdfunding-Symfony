<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_assetic_35a8e64' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '35a8e64',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/35a8e64.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_35a8e64_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '35a8e64',    'pos' => 0,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/35a8e64_comments_1.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/back/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/connect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/login-check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_backofficebundle_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\UserController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_stat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\StatisticController::chartAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/stat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_stat_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\StatisticController::charttAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/statidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_stat_vote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\StatisticController::chartvoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/statvote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_sup' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\UserController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/sup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_list_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\Idee2Controller::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/idee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_edit_idee' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::updateBackAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/editidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_desc_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::dscBackAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/descidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_asc_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::ascBackAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/ascidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_accepter' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\Idee2Controller::accepterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/accepter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_refuser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\Idee2Controller::refuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/refuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_block' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\UserController::blockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/block',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_activer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\UserController::activerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/activer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_sup_idee' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\Idee2Controller::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/supidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_list_projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\ProjetController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_accepter_projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\ProjetController::accepterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/accepterprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_refuser_projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\ProjetController::refuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/refuserprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_sup_projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\ProjetController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/supprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_stat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\StatController::startAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/statistiques/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_statLine' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\StatController::lineCharAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/statline/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_statUg' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\StatController::unifiedGraphAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/statug/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_statbar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\StatController::barChartAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/statBar/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_stathisto' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\StatController::chartHistogrammeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/stathisto/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_statPie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\StatController::chartPieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/statPie/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_listCompetences' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\CompetenceController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/competences/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_update_competence' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\CompetenceController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/updateComp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_delete_competence' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\CompetenceController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/deleteComp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_ajout_competence' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\CompetenceController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/addComp/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_list_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\Reclamation2Controller::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/listrec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_accepter_reclamation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\Reclamation2Controller::accepterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/accepterrec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_back_office_supprimer_reclamation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\BackOfficeBundle\\Controller\\Reclamation2Controller::supprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/supprimerrec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dcs_rating_add_vote' => array (  0 =>   array (    0 => 'id',    1 => 'value',  ),  1 =>   array (    '_controller' => 'DCS\\RatingBundle\\Controller\\RatingController::addVoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'value',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/vote/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_help' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\helpController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/help',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::contacterAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_ideeLayout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/idee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_afficher_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::afficherAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ideeaff/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_rechercher_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::rechAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rech',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_add_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::ajout2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_type_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::rechTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/typeidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_mes_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::afficher2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mesidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_tri_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::triAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/triidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_vote_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::triAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/voteidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_oneidee_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::oneIdeeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oneidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_update_idee' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/up',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_delete_idee' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/del',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_trivotedesc_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::triVoteDESCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/descidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_trivoteasc_idee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::triVoteASCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ascidee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_list_expert' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ExpertController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/experts',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_post_expert' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::postulerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/postuler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_tri_expert_asc' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ExpertController::listAscAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/expertsasc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_tri_expert_dsc' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ExpertController::listDscAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/expertsdsc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_tri_expert' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ExpertController::listTriAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/triexpert',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_mail' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\IdeeController::contacterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_ajout_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ReclamationController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajoutrec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_list_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ReclamationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listrec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_list1_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ReclamationController::list1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listrec1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_modifier_reclamation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ReclamationController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/modifierrec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_supprimer_reclamation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ReclamationController::supprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimerrec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_rechercher_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ReclamationController::rechercherAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rechercherrec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_probleme' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProblemeController::problemeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/probleme/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_listeprobleme' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProblemeController::listeprobAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/lstprobleme/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_deleteprobleme' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProblemeController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteProb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_updateprobleme' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProblemeController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/updateProb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_ProbSol' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProblemeSolutionController::affichAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listProbSol/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_ProbSoln' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProblemeSolutionController::affich1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listProbSol1/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_SingleProb' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProblemeSolutionController::affichOneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/singleProbSol',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_ProfilExpert' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\CompetenceController::CompetenceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profilExpert',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_funding' => array (  0 =>   array (    0 => 'idprojet',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\FinancementController::fundAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idprojet',    ),    1 =>     array (      0 => 'text',      1 => '/funding',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_application_rech_parcomp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\CompetenceController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/usersByComp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_ajout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProjetController::AjouterProjetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Ajoutprojet/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_liste' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProjetController::LiseProjetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/listeprojet/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_tableau' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProjetController::Lise1ProjetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tableauprojet/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProjetController::DeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/deleteprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProjetController::UpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/updateprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_rechercheP' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProjetController::RechercheProjetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Rechercheprojet/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_myProject' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProjetController::myProjetsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/myProjects/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_detail' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ProjetController::detailPAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/detailP',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_forum_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ForumController::addtopicAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addtopic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_forum_homepage_topics' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ForumController::viewtopicsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/homepageforum',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_front_office_forum_homepage_commenttopics' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ForumController::viewtopicAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fesprit_front_office_orum_homepage_add_response' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Esprit\\FrontOfficeBundle\\Controller\\ForumController::addcommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/comment2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/app/example',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_imagine_my_thumb' => array (  0 =>   array (    0 => 'filter',    1 => 'path',  ),  1 =>   array (    '_controller' => 'imagine.controller:filter',    'filter' => 'my_thumb',  ),  2 =>   array (    '_method' => 'GET',    'filter' => '[A-z0-9_\\-]*',    'path' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'path',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[A-z0-9_\\-]*',      3 => 'filter',    ),    2 =>     array (      0 => 'text',      1 => '/media/cache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::newThreadsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_edit_thread_commentable' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::editThreadCommentableAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/commentable/edit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::newThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments/new',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_remove_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::removeThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_edit_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::editThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/edit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_new_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::newThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes/new',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadsActions',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_threads' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::postThreadsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_patch_thread_commentable' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::patchThreadCommentableAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/commentable',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comment' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadCommentAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'commentId',    ),    2 =>     array (      0 => 'text',      1 => '/comments',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_patch_thread_comment_state' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::patchThreadCommentStateAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/state',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_put_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::putThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'commentId',    ),    2 =>     array (      0 => 'text',      1 => '/comments',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_thread_comments' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::postThreadCommentsAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_get_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::getThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_comment_post_thread_comment_votes' => array (  0 =>   array (    0 => 'id',    1 => 'commentId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'FOS\\CommentBundle\\Controller\\ThreadController::postThreadCommentVotesAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/votes',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/threads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_welcome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\WelcomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acme_demo_secured_hello' => array (  0 =>   array (  ),  1 =>   array (    'name' => 'World',    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello_admin' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
